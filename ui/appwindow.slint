import { Button, VerticalBox, HorizontalBox, ListView, ScrollView } from "std-widgets.slint";
import { ContainerData, ContainerAction, ContainerStatus } from "./types.slint";
import { ContainerItem } from "./components/container-item.slint";
import { ActionPanel } from "./components/action-panel.slint";

export component AppWindow inherits Window {
    title: "Docker UI";
    in-out property <[ContainerData]> containers: [];
    callback refresh_containers();
    callback run_container(string);
    callback stop_container(string);
    HorizontalBox {
        VerticalBox {
            ActionPanel {
                refresh_containers => {
                    root.refresh_containers();
                }
            }
            Rectangle {
                height: 10px;
            }
            if containers.length > 0: VerticalLayout {
                min-height: 300px;
                spacing: 5px;
                for c in containers: ContainerItem {
                    height: 50px;
                    data: c;
                    status_change(action) => {
                        if action == ContainerAction.Start {
                            root.run_container(c.id);
                            root.refresh_containers();
                            return;
                        } else if action == ContainerAction.Stop {
                            root.stop_container(c.id);
                            root.refresh_containers();
                            return;
                        }
                    }
                }
            }
            if containers.length == 0: HorizontalLayout {
                alignment: center;
                Text {
                    padding: 20px;
                    text: "No containers found";
                }
            }
        }
    }
}
