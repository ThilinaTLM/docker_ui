import { Button, VerticalBox, HorizontalBox, ListView, ScrollView } from "std-widgets.slint";
import { ContainerData, ContainerAction, ContainerStatus } from "./types.slint";
import { ContainerItem } from "./container-item.slint";

export component AppWindow inherits Window {
    min-width: 600px;
    min-height: 400px;
    title: "Docker UI";
    in-out property <[ContainerData]> containers: [
        {
            id: "123456789012345678901234",
            short_id: "123456",
            name: "test",
            status: ContainerStatus.Running,
        }
    ];
    callback refresh_containers();
    callback run_container(string);
    callback stop_container(string);
    HorizontalBox {
        VerticalBox {
            HorizontalBox {
                alignment: start;
                height: 50px;
                Text {
                    text: "Docker UI";
                    font-size: 16px;
                    horizontal-alignment: center;
                }
                Button {
                    text: "Refresh";
                    clicked => {
                        root.refresh_containers();
                    }
                }
            }
            VerticalLayout {
                spacing: 5px;
                for c in containers: ContainerItem {
                    height: 50px;
                    data: c;
                    status_change(action) => {
                        if action == ContainerAction.Start {
                            root.run_container(c.id);
                            root.refresh_containers();
                            return;
                        } else if action == ContainerAction.Stop {
                            root.stop_container(c.id);
                            root.refresh_containers();
                            return;
                        }
                    }
                }
            }
        }
    }
}
